interface Entity {
  id: String!
}

interface Person {
  name: String!
}

type Contact implements Person {
  name: String!
}

type User implements Entity & Person {
  name: String!
  username: String!
  password: String
  createdAt: Date
}

union People = User | Contact

scalar Date

enum Status {
  ACTIVE
  INACTIVE
}

input CreateUser {
  username: String!
  password: String! = "supersecretpassword"
}

extend type Query {
  listUsers: [User]
  getUser(id: ID!): User
}

extend type Mutation {
  createUser(input: CreateUser): User
}
